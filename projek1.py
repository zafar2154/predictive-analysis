# -*- coding: utf-8 -*-
"""projek1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m2iMdHgEzmxx9CnbtgUniX2vJ7bz-pdq
"""

from google.colab import files
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.ensemble import RandomForestClassifier

files.upload()

!kaggle datasets download -d adityakadiwal/water-potability
!unzip water-potability.zip

data = pd.read_csv('water_potability.csv')
data.info()

data = data.dropna()
data = data.drop_duplicates()

data.info()

data.head()

data.describe().loc[['min', '50%', 'mean', 'max', 'std']].T.style.background_gradient(axis=1)

x=data.drop('Potability',axis=1)
y=data['Potability']

import seaborn as sns
data.hist(bins=50, figsize=(15,10))
plt.show()

scaler = StandardScaler()
X_scaled = scaler.fit_transform(x)

x_train,x_test,y_train,y_test=train_test_split(X_scaled,y,test_size=0.3,random_state=42)

from sklearn.linear_model import LogisticRegression # Import the LogisticRegression class

logreg = LogisticRegression(random_state=42)
logreg.fit(x_train, y_train)
logreg.score(x_test, y_test)
y_pred_logreg = logreg.predict(x_test)

rf = RandomForestClassifier(random_state=42)
rf.fit(x_train, y_train)
rf.score(x_test, y_test)
y_pred_rf = rf.predict(x_test)

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report

# Evaluasi untuk Logistic Regression
print("Evaluasi Model: Logistic Regression")
print("Akurasi:", accuracy_score(y_test, y_pred_logreg))
print("Precision:", precision_score(y_test, y_pred_logreg))
print("Recall:", recall_score(y_test, y_pred_logreg))
print("Classification Report:\n", classification_report(y_test, y_pred_logreg))

print("\n" + "="*50 + "\n")

# Evaluasi untuk Random Forest Classifier
print("Evaluasi Model: Random Forest")
print("Akurasi:", accuracy_score(y_test, y_pred_rf))
print("Precision:", precision_score(y_test, y_pred_rf))
print("Recall:", recall_score(y_test, y_pred_rf))
print("Classification Report:\n", classification_report(y_test, y_pred_rf))